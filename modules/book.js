module.exports = function(app, pool, fs) {

    app.post('/node_add_book', function(req, res) {
        console.log("node_add_book");
        sess = req.session;
        if (sess && sess.email != null) {
            query = "insert into books(email, title, author, edition, category, price, cond, sale,sold, updatetime) " +
                "value('" + sess.email + "', '" + req.body.title + "', '" + req.body.author + "', '" + req.body.edition + "', '" + req.body.category + "', '" + req.body.price + "', '" + req.body.condition + "', " + req.body.sale + ", false,NOW());";
            pool.executeQuery(query, add_book, res, req)
        } else {
            res.send({ 'status': '0' });
        }

    });

    app.post('/node_user_books', function(req, res) {
        console.log("node_user_books");
        sess = req.session;
        if (sess && sess.email != null) {
            query = "select * from books where email = '" + sess.email+"' ORDER BY updatetime DESC;";
            pool.executeQuery(query, send_data, res, req)
        } else {
            res.send({ 'status': '0' });
        }

    });

    app.post('/node_sold', function(req, res) {
        console.log("node_sold", req.body);
        sess = req.session;
        if (sess && sess.email != null) {
            query = "UPDATE books SET sold=true WHERE id = "+ req.body.id+" and email='"+sess.email+"';";
            pool.executeQuery(query, send_data, res, req)
        } else {
            res.send({ 'status': '0' });
        }

    });

    app.post('/node_search_books', function(req, res) {
        console.log("node_search_books");
        if(req.body.title == undefined){
            query = "SELECT users.email,users.first_name,users.last_name, books.* FROM users INNER JOIN books ON users.email=books.email where sold <> true ORDER BY updatetime DESC;";
        }else{
            query = "SELECT users.email,users.first_name,users.last_name, books.* FROM users INNER JOIN books ON users.email=books.email where sold <> true and books.title like '%"+req.body.title+"%'  ORDER BY updatetime DESC;";

        }

    pool.executeQuery(query, send_data, res, req)

    });


    add_book = function(res, data, rows, req) {
        if (data['status'] == '2') {
            var fs = require('fs');
            // string generated by canvas.toDataURL()
            var img = req.body.image;
            // strip off the data: url prefix to get just the base64-encoded bytes
            var data2 = img.replace(/^data:image\/\w+;base64,/, "");
            var buf = new Buffer(data2, 'base64');
            fs.writeFile('public/images/books/'+req.session.email+rows.rows.insertId+'.png', buf);
        }

        res.send(data);
    }

    send_data = function(res, data, rows, req) {
        res.send(data);
    }

}
